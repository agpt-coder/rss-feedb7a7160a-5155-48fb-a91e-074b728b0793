// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id             String        @id @default(dbgenerated("gen_random_uuid()"))
  email          String        @unique
  hashedPassword String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  role           UserRole      @default(USER)
  apiKeys        ApiKey[]
  feedRequests   FeedRequest[]
}

model ApiKey {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  key       String   @unique
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model FeedRequest {
  id           String        @id @default(dbgenerated("gen_random_uuid()"))
  url          String
  requestedAt  DateTime      @default(now())
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  feedResponse FeedResponse?
}

model FeedResponse {
  id        String      @id @default(dbgenerated("gen_random_uuid()"))
  content   Json
  createdAt DateTime    @default(now())
  requestId String      @unique
  request   FeedRequest @relation(fields: [requestId], references: [id])
}

enum UserRole {
  USER
  ADMIN
  SUBSCRIBER
}

